<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NeJgsEF6Jo2n7KD/2Q==
</value>
  </data>
</root>